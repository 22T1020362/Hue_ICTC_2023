#include <iostream>
#include <set>
#include <algorithm>
using namespace std;
pair<long long int, int> a[300005];
int main() {
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) {
        cin >> a[i].first;
        a[i].second = i;
    }
    sort(a + 1, a + n + 1);
    set<int> s, t;
    long long int res = 0;
    for (int i = n; i >= 1; i--) {
        set<int>::iterator h = s.upper_bound(a[i].second);
        set<int>::iterator k = t.upper_bound(n - a[i].second);
        int x, y;
        if (h == s.end()) y = n;
        else y = *h - 1;
        if (k == t.end()) x = 1;
        else x = n - *k + 1;
        res += a[i].first * (1ll * (y - a[i].second + 1) * (a[i].second - x + 1));
        s.insert(a[i].second);
        t.insert(n - a[i].second);
    }
    s.clear();
    t.clear();
    for (int i = 1; i <= n; i++) {
        set<int>::iterator h = s.upper_bound(a[i].second);
        set<int>::iterator k = t.upper_bound(n - a[i].second);
        int x, y;
        if (h == s.end()) y = n;
        else y = *h - 1;
        if (k == t.end()) x = 1;
        else x = n - *k + 1;
        res -= a[i].first * (1ll * (y - a[i].second + 1) * (a[i].second - x + 1));
        s.insert(a[i].second);
        t.insert(n - a[i].second);
    }
    cout << res;
}
